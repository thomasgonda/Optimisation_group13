%13th December 2019
%Thomas Gonda
%Imperial College London, Dyson School of Design Engineering
%Optimisation coursework - Group 13
%Subsystem 1: Sail + Mast design

clc
clear all

Dair = 1.225; %air density in kg/m^3
price_fuel = 5.3763e-07; %USD/J
tAB = 1555200; %in seconds, 18 days
awind_speed = 7.7; %in m/s (15knts)
awind_tangle = 50;
sail_tangle = 80; %sail true angle, for an angle of attack of 30deg to the apparent wind

young_modulus = 190 * 10^6; %in Pa
dint = 0.1; %inside diameter of the hollow mast

price_material = 3982; %price of the material for the mast in USD/m^3
price_cloth = 100; %price of the sailcoth USD/m^2, typically the price for a nylon based material

%Note: for this algorithm, we directly start by defining the apparent wind
%angle and speed. However, these are normanlly a function of the boat
%direction and speed as well as the meteorological wind direction and
%speed. See the modelisation of the wind model at the bottom of this code

%awind_speed = sqrt(rwind_speed^2 + boat_speed^2 + 2*rwind_speed*boat_speed*cosd(boat_tangle));
%awind_tangle = acosd((rwind_speed*cosd(boat_tangle)+boat_speed)/ awind_speed);

%% Surrogate Models

Cl = -0.9173 + 0.1544*awind_tangle - 0.002931*awind_tangle^2 + 1.505*10^-5*awind_tangle^3; % lift coefficient
Cd = 0.1542 - 0.0001104*awind_tangle + 8.622*10^-5*awind_tangle^2 + 7.064*10^-7 *awind_tangle^3; % drag coefficient

%% 
%xc_sail = W/3; %coordinate for the center of the sail where all the wind load is being applied
%yc_sail = H/3;
%sail_load = (0.5 * Dair * awind_speed^2 * H * W) * cosd(pi*(sail_tangle - awind_tangle));
%bending_moment = (yc_sail + 3.5) * sail_load; %we add 3.5m as the sail origin at a 3.5m height
%twisting_moment = (xc_sail + dout) * sail_load;
%maxshear_stress = 16 * sqrt(bending_moment^2 + twisting_moment^2) / pi * x(3)^3 * [1 - (dint / dout)^4];
%mast_volume = (H + 3.5) * pi * (dout^2 - dint^2);
%cost_mast = mast_volume * price_material; %make sure the unit are correct for the material
%objective = @(x) -(- cost_sail + cost_mast);

%W = x(1);
%H = x(2);
%dout = x(3)

objective = @(x) -((0.25 * Dair * x(1) * x(2) * Cl * awind_speed.^3 - 0.25 * Dair *...
    x(1) * x(2) * Cd * awind_speed.^3 - 0.25 * Dair * x(1) * x(2) * ((Cl^2 * x(1) )/(pi * x(2)))...
    * awind_speed.^3) * tAB * price_fuel - ((x(2) + 3.5) * pi * (x(3)^2 - dint^2) * price_material) ...
    - 0.5 * x(1) * x(2) * price_cloth);

A =[]; 
B=[]; 
Aeq=[]; 
Beq=[]; 
lb=[5,25,0.11]; 
ub=[20,60,5];

x0 = [20,60,5];
nonlcon = @nonlincon

%x = ga(objective,3,A,B,Aeq,Beq,lb,ub,nonlcon); %using a genetic algorithm

options = optimoptions(@fmincon, 'Algorithm','sqp');
x = fmincon(objective,x0,A,B,Aeq,Beq,lb,ub,nonlcon);

X = sprintf('Sail width= %d meters,    Sail height= %d meters,   Mast outer diameter= %d meters', x(1),x(2),x(3));
disp(X)

benefit_sail = sail_saving(x(1),x(2));
L = sprintf('The benefit of harvesting wind with the sail is: %d USD', benefit_sail);
disp(L)

cost_total = total_cost(x(1),x(2),x(3));
O = sprintf('The total cost of the sail+mast subsystem is: %d USD', cost_total);
disp(O)


function [c, ceq] = nonlincon(x) 
Dair = 1.225; %air density in kg/m^3
price_fuel = 5.3763e-07;
tAB = 1555200; 
awind_speed = 7.7;
awind_tangle = 50;
sail_tangle = 80;
young_modulus = 190 * 10^6;
dint = 0.1;

c = (16 * sqrt(((x(2)/3 + 3.5) * (0.25 * Dair * awind_speed^2 * ...
    x(1) * x(2)) * cosd(pi/2 -(sail_tangle - awind_tangle)))^2 + ((x(1)/3 + x(3)) * ...
   (0.25 * Dair * awind_speed^2 * x(1) * x(2)) * cosd(pi/2 -(sail_tangle - awind_tangle)))^2))...
   / (pi * x(3)^3 * (1-(dint/x(3))^4)) - young_modulus;


ceq = [];
    
end 

function cost_sailmast = total_cost(width, height,diameter)

Dair = 1.225;
dint = 0.1;
price_fuel = 5.3763e-07; 
price_cloth = 100;
price_material = 3982;
tAB = 1555200; 
awind_speed = 7.7;
awind_tangle = 50;
sail_tangle = 80;

Cl = -0.9173 + 0.1544*awind_tangle - 0.002931*awind_tangle^2 + 1.505*10^-5*awind_tangle^3; 
Cd = 0.1542 - 0.0001104*awind_tangle + 8.622*10^-5*awind_tangle^2 + 7.064*10^-7 *awind_tangle^3;

cost_sailmast = (-0.25 * Dair * width * height * Cl * awind_speed.^3 + 0.25 * Dair *...
    width * height * Cd * awind_speed.^3 + 0.25 * Dair * width * height * ((Cl^2 * width )/(pi * height))...
    * awind_speed.^3) * tAB * price_fuel + ((height + 3.5) * pi * (diameter^2 - dint^2) * price_material) ...
    +  0.5 * width * height * price_cloth;
end

%% Sail cost function
function cost_sail_nomaterial = sail_saving(width, height) %savings generated by harvesting windpower, excluding material costs for the sail
Dair = 1.225;
price_fuel = 5.3763e-07; %USD/J
tAB = 1555200; %in seconds, 18 days
awind_speed = 7.7;
awind_tangle = 50;
sail_tangle = 80;

Cl = -0.9173 + 0.1544*awind_tangle - 0.002931*awind_tangle^2 + 1.505*10^-5*awind_tangle^3; %taken from surogate model

cost_sail_nomaterial = 0.25 * Dair * width * height * Cl * awind_speed.^3 * tAB * price_fuel;
end

%% WINDMAP
function windmap = wind_map()

n = 20; %resolution of the windmap is D/N with D~6000 nautical miles
W=[0 ;0 ;0];
a = -10; %start for wind_angle
b = 10;
c = -30; %variation of wind angle from one unit to the other +-30deg
d = 30;
e = 0; %start for wind speed
f = 50; %note: maybe the wind for extreme events should have a lower probability
g = -5; %variation of the boat_tangle per unit is +-5deg
h = 5;

 for i=1:N %number of times we divide de sailing path, each part of the path is equal distance
    rwind_tangle = (b-a)*rand(1,1) + a; %generates a number in [a,b]
    x = (d-c)*rand(1,1)+c; %generates number in [-30,30]
    a = a + x; %adds a number in [-30,30] to a
    b = b + x; %adds a number in [-30,30] to b 
    rwind_tangle = mod(rwind_tangle,180); %we assume all the winds come from the starboard direction (it's symmetrical because the sails can rotate) hence 180deg and not 360deg
    
    rwind_speed = (h-g)*rand(1,1) + g;
    y = (h-g)*rand(1,1)+g;
    e = e + y;
    f = f+y;
    Vr = mod(rwind_speed,50); %fix this
    
    boat_tangle = (h-g)*rand(1,1) + g; 
    y = (h-g)*rand(1,1)+g;
    e = e + y;
    f = f+y;
    boat_tangle = mod(boat_tangle,60)+240; %we take the West-30 deg as reference, so this is a true angle
    
    W(i,1)= rwind_tangle; %meteorological wind true angle
    W(i,2)= rwind_speed; %meteorological wind true speed
    W(i,3)= boat_tangle; %boat direction true angle
 end
 W;
 
%Apparent wind
%The values from the boat speed/angle and meteorological wind speed/angle

A = [0; 0]
for i=1:20
    rwind_tangle = W(i,1)
    rwind_speed = W(i,2);
    boat_tangle = W(i,3);
    awind_speed = sqrt(rwind_speed^2 + boat_speed^2 + 2*rwind_speed*boat_speed*cosd(boat_tangle));
    awind_tangle = acosd((rwind_speed*cosd(boat_tangle)+boat_speed)/ awind_speed);
    
    A(i,1) = awind_tangle; %apparent wind true angle
    A(i,2) = awind_speed; %apparent wind speed
end 

end 
